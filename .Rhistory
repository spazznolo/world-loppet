# load packages
library(XML); library(rvest); library(tidyverse)
# create shell for historic results set
missed_results = data.frame(matrix(NA,0,0))
options(timeout= 10000000000)
missing_events = read_csv('missing_events.csv')
View(missing_events)
# load packages
library(XML); library(rvest); library(tidyverse)
# create shell for historic results set
missed_results = data.frame(matrix(NA,0,0))
options(timeout= 10000000000)
missing_events = read_csv('missing_events.csv')
View(missing_events)
# load packages
library(XML); library(rvest); library(tidyverse)
# create shell for historic results set
missed_results = data.frame(matrix(NA,0,0))
options(timeout= 10000000000)
missing_events = read_csv('missing_events.csv')
# run get_race_results for desired events
for (event_id in missing_events$x) {
for (page_number in 1:20) {
# update progress
message('Retrieving Page ',page_number,' of Event ',event_id)
for (rank in c('m','w')) {
# create url of desired event and page
race_url = paste0('https://www.worldloppet.com/browse/?rank=',rank,'&id=',event_id,'&pgn=',page_number)
# scrape desired page
read_html(race_url) %>%
html_nodes('table') %>%
.[1] %>%
html_table(fill=TRUE) %>%
.[[1]] %>%
mutate(id=event_id) -> results_table
# move to next event if table is empty
if (nrow(results_table)==0) break
# bind table to master set
missed_results = rbind(missed_results,results_table)
# temporary break
Sys.sleep(3)
}
}
}
# save tournament results
write.csv(missed_results,'missed_results.csv',row.names=FALSE)
missed_results %<>% arrange(time) %>% group_by(id) %>% mutate(Position=order(time))
View(missed_results)
library(tidyverse); library(magrittr)
general_results = read_csv('general_results.csv')
missed_results = read_csv('missed_results.csv')
general_dictionary = read_csv('general_dictionary.csv')
total_results = rbind(general_results,missed_results)
event_information = str_split(general_dictionary$event_date,' ')
general_dictionary %<>%
mutate(date = sapply(event_information,'[',1),
distance_km = sapply(event_information,'[',2),
type = sapply(event_information,'[',4)) %>%
select(-event_date)
format_general_results = total_results %>%
left_join(general_dictionary,by=c('id'='event_id')) %>%
mutate(Position=parse_number(Position)) %>%
add_count(id,name='participants') %>%
mutate(percent_rank = Position/participants) %>%
set_colnames(c('position','name','age_group','flag','time',
'points','id','event_name','year','date',
'distance_km','type','participants','percent_rank')) %>%
select(position,percent_rank,name,age_group,flag,time,
points,id,event_name,year,date,distance_km,type,participants)
View(format_general_results)
write.csv(format_general_results,'final_results.csv',row.names=FALSE)
